/* import google fonts */
@import url('https://fonts.googleapis.com/css2?family=Kanit&family=Quicksand:wght@300&display=swap');

// import container properties
@import './containers/containers.css';
@import './containers/project.scss';
@import './containers/design.css';

/* import component properties */
@import './components/nav.scss';
@import './components/sidenav.css';
@import './components/header.css';
@import './components/main.css';
@import './components/aside.css';
@import './components/footer.css';

/* import element properties */
@import './elements/titles.css';
@import './elements/text.css';
@import './elements/buttons.css';
@import './elements/links.css';

/* import image source content */
@import './content/images.css';
@import './content/preview.css';

/* CSS Reset */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
/* CSS Variables */
:root {

    // background : dark blue
    --blueprint: rgb(14, 28, 44);
    
    // background : grey scale
    --greyscale: rgb(0, 0, 0);
    --greyscale: rgb(41, 53, 72);
    --greyscale: rgb(22, 22, 28);
    --greyscale: rgba(14, 8, 8, 0.746);

    /* accent color variable */
    --accent: rgb(223, 168, 28);
    --accent: rgb(223, 93, 28);
    --accent: rgb(78, 178, 145);

    /* imported google font families */
    --title-font: 'Kanit', sans-serif;;
    --text-font: 'Quicksand', sans-serif;

    // border : dark grey
    --border-dark: 2px solid darkslategrey;

    // border white
    --border-white: 2px solid whitesmoke;

    // color white
    --color-white: #FFF;

}

/* 

    Page Wrapper

    Grid based layout for the entire website.

    Contains
        1. Header Component
        2. Side Navigation Component
        3. Main Component
        4. Aside Component
        5. Footer Component
*/
.page {
    /* 
        apply the display of grid, create 6 columns to space
        website content.
    */
    display: grid;
    align-content: space-between;
    grid-template-columns: repeat(6, 1fr);

    /*
        provide sizing & dimension properties to the page wrapper
    */
    height: 100vh;
    max-height: 100vh;
    width: 100%;

    /* 
        provide the position relative property to the page
        wrapper to act as the base point for out of page-flow
        elements (animation).
    */
    position: relative;

    /* 
        provide the overflow property of hidden to the page
        wrapper. This will contain the page / application 
        to a consistent size of all devices.
    */
    overflow: hidden;

    /*
        apply the background variable blueprint ( darkblue ) 
        to the page wrapper. Also apply the text color to 
        white.
    */
    background: var(--blueprint);
    color: #FFF;
}

/*
    Remove Desktop Content on Mobile Devices.
    Display Mobile Content on Mobile Devices.
*/
.mobile {display: block;}
.desktop {display: none;}

@media (min-width: 900px) {
    // flex specific container position properties
    .reverse {
        // reverse the direction of the row inside the container
        flex-direction: row-reverse;
    }
    .center {
        // position elements to the center of the container
        align-items: center;
    }
    .offset {
        // set the offset article elements to the end of the container
        align-items: flex-end;
    }
    /*
        Remove Mobile Content on Desktop Devices.
        Display Desktop Content on Desktop Devices.
    */
    .mobile {display: none;}
    .desktop {display: block;}
}